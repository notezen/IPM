
find_package( Qt4 )
set( QT_USE_QTCORE     True )
#set( QT_USE_QTGUI      True )
set( QT_USE_QTNETWORK  True )
set( QT_USE_QTXML      True )
include( ${QT_USE_FILE} )

set( Boost_USE_STATIC_LIBS True )
set( Boost_USE_MULTITHREADED True )
find_package( Boost COMPONENTS thread filesystem REQUIRED )
find_package( Threads )

include_directories( "./src" 
                     "${ROOT}/peer_abst/src" 
                     ${LUA_INCLUDE_DIR}
                     #${ROOT}/3dparty/qxmpp-0.7.4/src/base
                     #${ROOT}/3dparty/qxmpp-0.7.4/src/client
                     #${ROOT}/3dparty/qxmpp-0.7.4/src/server
                     /usr/include/qxmpp
                     ${Boost_INCLUDE_DIRS} 
                     ${CMAKE_CURRENT_BINARY_DIR} )

file( GLOB src     "./src/*.cpp" )
file( GLOB headers "./src/*.h" )
file( GLOB ui      "./src/*.ui" )
file( GLOB qrc     "./src/*.qrc" )
message( STATUS "SRC = ${src}" )
message( STATUS "HEADERS = ${headers}" )

Qt4_WRAP_CPP( mocSrc ${headers} )
set( src ${src} ${mocSrc} )

QT4_WRAP_UI( uiSrc ${ui} )
set( src ${src} ${uiSrc} )

QT4_ADD_RESOURCES( qrcSrc ${qrc} )
set( src ${src} ${qrcSrc} )

add_library( peer_qxmpp STATIC ${src} )
set( libs peer_abst ${LUA_LIBRARIES} qxmpp )
message( STATUS "LIBS0 = ${libs}" )
set( libs ${libs} ${QT_LIBRARIES} ${CMAKE_THREAD_LIBS_INIT} ${Boost_LIBRARIES} )
message( STATUS "LIBS1 = ${libs}" )
set( defs QXMPP_STATIC )
target_link_libraries( peer_qxmpp ${libs} )
set_property( TARGET peer_qxmpp PROPERTY COMPILE_DEFINITIONS ${defs} )




